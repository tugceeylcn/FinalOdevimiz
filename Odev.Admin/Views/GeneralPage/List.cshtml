@using Odev.Domain.ViewModels
@using Odev.Domain.Helpers

@model IQueryable<GeneralPageViewModel>

@{
    ViewBag.Title = Session["PageName"] + "Listesi";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@Html.Partial("_TopPartialView",
    new TopPartialViewModel
    {
        Title = Session["PageName"] + " Listesi",
        ListUrl = null
    })


<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox ">
                @if (TempData["ErrorMessage"] != null)
                {
                    <div class="alert alert-danger" role="alert"><strong>@TempData["ErrorMessage"]</strong></div>
                }
                <div class="ibox-title">
                    <a href="@Url.Action("New","GeneralPage")" class="btn btn-primary">Yeni @Session["PageName"]</a>
                </div>
                <div class="ibox-content">
                    @if (Model.ToList().Where(x => x.IsActive == true).Count() == 0)
                    {
                        <div class="row">
                            <div class="col-lg-12">
                                <div class="alert alert-success" role="alert">
                                    @Session["PageName"] Listesi Boş
                                </div>
                            </div>
                        </div>
                    }
                    else
                    {
                        <div class="table-responsive">
                            <table class="table table-striped table-bordered table-hover dataTables-example">
                                <thead>
                                    <tr>
                                        <th>#</th>
                                        <th>Başlık</th>
                                        <th>Dil</th>
                                        <th>İşlemler</th>
                                    </tr>
                                </thead>
                                <tbody id="TableGeneral">
                                    @foreach (var item in Model.ToList())
                                    {
                                        <tr>
                                            <td>@item.Id</td>
                                            <td>@item.Title</td>
                                            <td>@item.Language.GetDisplayName()</td>
                                            <td>
                                                @Html.ActionLink("Düzenle", "Edit", "GeneralPage", new { id = item.Id }, new { @class = "btn btn-warning" })
                                                <button data-id='@item.Id' class="btn btn-danger">Sil</button>
                                            </td>
                                        </tr>
                                    }

                                </tbody>
                                <tfoot>
                                    <tr>
                                        <th>#</th>
                                        <th>Başlık</th>
                                        <th>Dil</th>
                                        <th>İşlemler</th>
                                    </tr>
                                </tfoot>
                            </table>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>
<!-- end row -->

@section script{
    <link href="/Assets/css/plugins/sweetalert/sweetalert.css" rel="stylesheet">
    <script src="/Assets/js/plugins/sweetalert/sweetalert.min.js"></script>

    <script>
        $(document).ready(function () {
            var dataTable = $('.dataTables-example').DataTable({
                pageLength: 25,
                responsive: true,
                dom: '<"html5buttons"B>lTfgitp',
                buttons: [
                    {
                        extend: 'excel',
                        title: '@Session["PageName"] Listesi',
                        exportOptions: {
                            columns: [0, 1, 2]
                        }
                    },
                    {
                        extend: 'pdf',
                        title: '@Session["PageName"] Listesi',
                        exportOptions: {
                            columns: [0, 1, 2]
                        }
                    },
                    {
                        extend: 'print',
                        customize: function (win) {
                            $(win.document.body).addClass('white-bg');
                            $(win.document.body).css('font-size', '10px');
                            $(win.document.body).find('table')
                                .addClass('compact')
                                .css('font-size', 'inherit');
                        },
                        exportOptions: {
                            columns: [0, 1, 2]
                        }
                    }
                ],
                select: true,
                columnDefs: [
                    { orderable: false, targets: 3 }
                ],
                lengthMenu: [
                    [10, 25, 50, -1],
                    ['10', '25', '50', 'Tümü']
                ],
                "language": {
                    "lengthMenu": "Sayfa başına _MENU_ kayıt göster",
                    "info": "_TOTAL_ kayıttan _START_ - _END_ arası gösteriliyor",
                    "infoEmpty": "Gösterilecek kayıt yok",
                    "infoFiltered": "(_MAX_ kayıt içerisinden filtrelenen)",
                    "search": "Ara:",
                    "paginate": {
                        "first": "İlk",
                        "last": "Son",
                        "next": "Sonraki",
                        "previous": "Önceki"
                    }
                }
            });

            $("#TableGeneral").on("click", "button", function () {
                var generalPageId = $(this).data("id");

                var generalPage = {
                    Id: generalPageId,
                };

                swal({
                    title: "Emin misiniz?",
                    type: "warning",
                    showCancelButton: true,
                    confirmButtonColor: "#DD6B55",
                    confirmButtonText: "Sil",
                    cancelButtonText: "İptal",
                    closeOnConfirm: false,
                    closeOnCancel: false,

                },
                    function (isConfirm) {
                        if (isConfirm) {
                            $.ajax({
                                type: "post",
                                url: "/GeneralPage/Delete/",
                                data: generalPage,
                                success: function (mahmt) {
                                    if (mahmt) {
                                        swal({
                                            title: "Silme işlemi başarılı?",
                                            closeOnConfirm: false,

                                        });
                                        location.reload();
                                    }
                                    else {
                                        alert("Bir hata oluştu")
                                    }
                                }
                            });
                        } else {
                            swal({
                                title: "İptal Edildi",
                                type: "error",
                                confirmButtonText: "Tamam",
                                closeOnConfirm: false,

                            });
                        }
                    });
            });
        });
    </script>
}
